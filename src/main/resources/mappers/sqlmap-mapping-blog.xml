<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.zone.dao.article.ArticleDAO">
	<select id="getAllArticle" resultType="com.tian.zone.dto.article.ArticleDTO">
		SELECT
			a.id,
			a.title,
			a.author,
			a.content,
			a.date_created,
			a.date_updated,
			a.category_id,
			b.name category,
			d.id tagId,
			d.name tag
		FROM
			blog_blog a left join blog_category b on a.category_id = b.id left join blog_tags c on a.id = c.blog_id left join blog_tag d on c.tag_id = d.id
		ORDER BY
			a.date_updated desc
	</select>
	
	<select id="getBlogCountComment" parameterType="java.lang.String" resultType="java.lang.String">
		select count(1) from coffee_article_comment a where a.article_id = #articleId#
	</select>
	
	<select id="getArticleById" parameterType="java.lang.String" resultType="com.tian.zone.dto.article.ArticleDTO">
		select * from blog_blog where id=#{id}
	</select>
	<select id="getPreByID" parameterType="java.lang.String" resultType="com.tian.zone.dto.article.ArticleDTO">
		select * from blog_blog where <![CDATA[ id<#{id} ]]> order by id desc limit 1
	</select>
	<select id="getNextByID" parameterType="java.lang.String" resultType="com.tian.zone.dto.article.ArticleDTO">
		select * from blog_blog where <![CDATA[ id>#{id} ]]> order by id asc limit 1
	</select>
	<insert id="addArticle" parameterType="com.tian.zone.dto.article.ArticleDTO">
		insert into blog_blog(id,title,content,date_created,date_updated,author,category_id)
		values
		(#{id},#{title},#{content},#{dateCreated},#{dateUpdated},#{author},#{categoryId})
	</insert>
	<delete id="delteArticleByID" parameterType="java.lang.String">
		delete from coffee_blog_article where article_id=#{id}
	</delete>
</mapper>